AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    MemorySize: 128
    Architectures: ["x86_64"]
    Handler: bootstrap
    Runtime: provided.al2
    Timeout: 5
    Environment:
      Variables:
        COGNITO_CLIENT_ID: !Ref UserPoolClient

Resources:
  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: "auth-up-fiap-project"
      AliasAttributes:
        - preferred_username
      AutoVerifiedAttributes:
        - email
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Schema:
        - Name: "document"
          AttributeDataType: "String"
          DeveloperOnlyAttribute: false
          Mutable: false
          Required: false
          StringAttributeConstraints:
            MinLength: 11
            MaxLength: 11
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      EmailConfiguration:
        EmailSendingAccount: "COGNITO_DEFAULT"

  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: "auth-up-client-fiap-project"
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
        - USER_PASSWORD_AUTH

  UserPoolDomain:
    Type: "AWS::Cognito::UserPoolDomain"
    Properties:
      Domain: "gp14-fiap-project"
      UserPoolId: !Ref UserPool

  AuthFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "AuthFunctionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogStream"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "authentication-lambda-gp14-fiap-project" 
      CodeUri: src
      Description: "User Authentication Lambda"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          AWS_CLIENT_ID: !Ref UserPoolClient
          AWS_USER_POOL_REGION: AWS::REGION
          AWS_USER_POOL_ID: !Ref UserPool
      Role: !GetAtt AuthFunctionRole.Arn
    Metadata:
      BuildMethod: go1.x